{"uid":"3a3dfafa0d1b9b6f","name":"Test UPDATE call [put_payload_2.json]","fullName":"api/api_tests.feature:Test UPDATE call","historyId":"fa8bc8630f1de107587b285d676fa467","time":{"start":1750366999576,"stop":1750366999603,"duration":27},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"passed","steps":[{"name":"Given I set api base url '{%API_BASE_URL%}'","time":{"start":1750366999577,"stop":1750366999578,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And I set the header param request content type as 'application/json'","time":{"start":1750366999579,"stop":1750366999579,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Given I set the UPDATE endpoint to '/posts/1' for updating posts","time":{"start":1750366999580,"stop":1750366999581,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When I send a PUT HTTP request with 'put_payload_2.json'","time":{"start":1750366999581,"stop":1750366999601,"duration":20},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Then I expect the HTTP response code of 'PUT' to be '200'","time":{"start":1750366999601,"stop":1750366999602,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And I expect the response body of 'PUT' to be non-empty","time":{"start":1750366999602,"stop":1750366999602,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":6,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"pkrvmxyh4eaekms"},{"name":"thread","value":"3589-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test HTTP methods for a REST API"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"payload","value":"put_payload_2.json"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":4,"unknown":0,"total":5},"items":[{"uid":"93c8256df6585534","reportUrl":"https://tweag.github.io/pytest-e2e-automation/18//#testresult/93c8256df6585534","status":"passed","time":{"start":1750280630414,"stop":1750280630506,"duration":92}},{"uid":"dec3d7a4f506cc5e","reportUrl":"https://tweag.github.io/pytest-e2e-automation/17//#testresult/dec3d7a4f506cc5e","status":"passed","time":{"start":1750194211163,"stop":1750194211247,"duration":84}},{"uid":"d4d24dba4a280332","reportUrl":"https://tweag.github.io/pytest-e2e-automation/16//#testresult/d4d24dba4a280332","status":"passed","time":{"start":1750164637475,"stop":1750164637710,"duration":235}},{"uid":"4d7062b117706306","reportUrl":"https://tweag.github.io/pytest-e2e-automation/15//#testresult/4d7062b117706306","status":"failed","statusDetails":"_pytest.fixtures.FixtureLookupError: ('selenium', <FixtureRequest for <Function test_test_update_call[put_payload_2.json]>>)","time":{"start":1750161348564,"stop":1750161348565,"duration":1}}]},"tags":[]},"source":"3a3dfafa0d1b9b6f.json","parameterValues":["put_payload_2.json"]}