name: Docker - IOS App Tests

env:
  TAGS: "ios_mobile_tests"

on:
  schedule:
    - cron: '30 23 * * *'
  workflow_dispatch:
    inputs:
      tags:
        description: Gherkin Tags
        required: true
        default: ios_mobile_tests

jobs:
  scheduled-regression:
    if: github.event_name == 'schedule'
    name: IOS - Schedule Regression
    runs-on: macos-latest
    steps:
      - name: Setup Python
        id: setup_python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      - name: Check out code
        id: co_code
        if: steps.setup_python.outcome == 'success'
        uses: actions/checkout@v4

      - name: Install and Run Appium Server
        id: setup_appium
        if: steps.co_code.outcome == 'success'
        run: |
          npm install -g appium

      - name: Install drivers
        id: install_drivers
        if: steps.setup_appium.outcome == 'success'
        run: |
          appium driver install xcuitest
          appium --relaxed-security --log-level debug &
          sleep 10
          appium -v

      - name: Set up X Code
        id: setup_xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '15.3.0'

      - name: Open IOS simulator
        id: open_ios_simulator
        if: steps.setup_xcode.outcome == 'success'
        run: |
          xcrun simctl list
          sleep 5
          open -a Simulator --args -CurrentDeviceUDID 6158282B-6478-42BF-9B60-C38B95EE46E5
          sleep 10

      - name: Setup dependencies
        id: setup_dependencies
        if: steps.open_ios_simulator.outcome == 'success'
        run: |
          sh setup_install.sh

      - name: Run Tests
        id: run_manual_job
        if: steps.setup_dependencies.outcome == 'success'
        run: |
          env
          source $HOME/.qa-venv/bin/activate
          python -m pytest -v --driver Appium --selenium-host 'localhost'  --selenium-port '4723' \
                                --variables './env_configs/ios_mobile_docker.json' \
                                --tags="$TAGS" \
                                --html=report.html \
                                --self-contained-html \

      - name: Upload HTML run report in the Artifacts Folder
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results
          path: |
            ./*.html
            ./output_data/
            ./assets/
        if: ${{ always() }}

  docker-manual-ios-run:
    if: github.event_name != 'schedule'
    name: Manual - ${{ inputs.tags }}
    runs-on: macos-latest
    steps:
      - name: Validate Input Parameter
        id: validate_input
        run: |
          if [[ -z "${{ github.event.inputs.tags }}" ]]; then
            echo "Invalid input: 'tags' is required but not provided."
            exit 1
          fi

      - name: Setup Python
        id: setup_python
        if: steps.validate_input.outcome == 'success'
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      - name: Check out code
        id: co_code
        if: steps.setup_python.outcome == 'success'
        uses: actions/checkout@v4

      - name: Install and Run Appium Server
        id: setup_appium
        if: steps.co_code.outcome == 'success'
        run: |
          npm install -g appium

      - name: Install drivers
        id: install_drivers
        if: steps.setup_appium.outcome == 'success'
        run: |
          appium driver install xcuitest
          appium --relaxed-security --log-level debug &
          sleep 10
          appium -v


      - name: Set up X Code
        id: setup_xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '15.3.0'

      - name: Open IOS simulator
        id: open_ios_simulator
        if: steps.setup_xcode.outcome == 'success'
        run: |
          xcrun simctl list
          sleep 5
          open -a Simulator --args -CurrentDeviceUDID 6158282B-6478-42BF-9B60-C38B95EE46E5
          sleep 10

      - name: Setup dependencies
        id: setup_dependencies
        if: steps.open_ios_simulator.outcome == 'success'
        run: |
          sh setup_install.sh

      - name: Run Tests
        id: run_manual_job
        if: steps.setup_dependencies.outcome == 'success'
        run: |
          TAGS="${{ github.event.inputs.tags }}"
          env
          source $HOME/.qa-venv/bin/activate
          python -m pytest -v --driver Appium --selenium-host 'localhost'  --selenium-port '4723' \
                                --variables './env_configs/ios_mobile_docker.json' \
                                --tags="$TAGS" \
                                --html=report.html \
                                --self-contained-html \

      - name: Upload HTML run report in the Artifacts Folder
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results
          path: |
            ./*.html
            ./output_data/
            ./assets/
        if: ${{ always() }}
